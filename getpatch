#!/usr/bin/env bash

currentdir=$(pwd)
patchURL=https://raw.githubusercontent.com/silverwolfg11/PatchStrap/master/patch
repoLink=""
repoFolder=""
repoBranch=""
mergeTool=""
patchAuthor=""

if [ $# -gt 1 ]; then

    # Argument Parsing
    for i in "$@"
    do
    case $i in
        -rl=*|--repo-link=*)
            repoLink="${i#*=}"
            shift # past argument=value
        ;;

        -rf=*|--repo-folder=*)
            repoFolder="${i#*=}"
            shift # past argument=value
        ;;

        -bn=*|--branch-name=*)
            repoBranch="${i#*=}"
            shift # past argument=value
        ;;

        -mt=*|--merge-tool=*)
            mergeTool="${i#*=}"
            shift # past argument with no value
        ;;

        -pa=*|--patch-author=*)
            patchAuthor="${i#*=}"

            # Add a space for the patch author
            if [ ! -z "$patchAuthor" ]; then
                patchAuthor="${patchAuthor/</ <}"
            fi

            shift # past argument with no value
        ;;

        *)
              # unknown option
        ;;
    esac
    done
else
    read -p "Type the repo link: " repoLink
    read -p "Type the repo folder: " repoFolder
    read -p "Type the repo branch: " repoBranch
fi

exit 1

if [ -f "patch" ]; then
    echo "Removing current patch file!"
    rm "patch"
fi

echo "Fetching latest patch file!"

curl $patchURL >> patch

echo "Filling in fields!"

sed -i '4d' "patch"
sed -i "4i repolink=\"$repoLink\"" "patch"
sed -i '6d' "patch"
sed -i "6i repofolder=\"$repoFolder\"" "patch"

sed -i '7d' "patch"
sed -i "7i patchAuthor=\"$patchAuthor\"" "patch"

if [ ! -z "$repoBranch" ]; then
    sed -i '5d' "patch"
    sed -i "5i branchName=\"$repoBranch\"" "patch"
fi

if [ ! -z "$mergeTool" ]; then
    sed -i '8d' "patch"
    sed -i "8i mergeTool=\"$mergeTool\"" "patch"
fi

./patch deletebootstrap